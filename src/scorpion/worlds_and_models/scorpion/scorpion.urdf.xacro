<?xml version="1.0" ?>
<robot name="scorpion"
    xmlns:xacro="http://wiki.ros.org/xacro">

    <material name="red">
        <color rgba="1 0.0 0.0 1"/>
    </material>
    <material name="black">
        <color rgba="0.043 0.004 0 1"/>
    </material>
    <material name="silver">
        <color rgba="0.73 0.73 0.82 1"/>
    </material>

    <xacro:include filename="$(find start_creating_robots)/worlds_and_models/krytn/inertial.xacro" />
    <link name="base_link" />
    <joint name="chasis_link_joint" type="fixed">
        <parent link="base_link" />
        <child link="chassis_link" />
    </joint>
    <!--Generated by CROSS, a ROS Workbench for FreeCAD (https://github.com/galou/freecad.cross)-->
    <link name="chassis_link">
        <visual>
            <!--chassis/Body.-->
            <origin xyz="0.0 0.0 0.0" rpy="0.0 -0.0 0.0"/>
            <geometry>
                <mesh filename="file://$(find scorpion)/worlds_and_models/scorpion/meshes/Unnamed_chassis_body.dae"/>
            </geometry>
            <material name="red" />
        </visual>
        <collision>
            <origin xyz="0.09 0 0.03"/>
            <geometry>
                <box size="0.18 0.09 0.03" />
            </geometry>
        </collision>
        <xacro:box_inertial_with_origin x="0.18" y="0.09" z="0.15" mass="4">
            <origin xyz="0.09 0 0" />
        </xacro:box_inertial_with_origin>
    </link>
    <link name="tail_link1">
        <visual>
            <!--tail1/Body001.-->
            <origin xyz="0.0 0.0 0.0" rpy="0.0 -0.0 0.0"/>
            <geometry>
                <mesh filename="file://$(find scorpion)/worlds_and_models/scorpion/meshes/Unnamed_tail1_body.dae"/>
            </geometry>
            <material name="red" />

        </visual>
        <collision>
            <origin xyz="-0.042 0 0" />
            <geometry>
                <box size="0.085 0.04 0.015" />
            </geometry>
        </collision>
        <xacro:box_inertial_with_origin x="0.085" y="0.04" z="0.015" mass="0.8">
            <origin xyz="-0.04 0 0" />
        </xacro:box_inertial_with_origin>
    </link>
    <link name="tail_link2">
        <visual>
            <!--tail2/Body002.-->
            <origin xyz="0.0 0.0 0.0" rpy="0.0 -0.0 0.0"/>
            <geometry>
                <mesh filename="file://$(find scorpion)/worlds_and_models/scorpion/meshes/Unnamed_tail2_body.dae"/>
            </geometry>
            <material name="black" />

        </visual>
        <collision>
            <origin xyz="-0.025 0 0" />
            <geometry>
                <box size="0.05 0.03 0.04" />
            </geometry>
        </collision>
        <xacro:box_inertial_with_origin x="0.05" y="0.03" z="0.045" mass="0.2">
            <origin xyz="-0.025 0 0" />
        </xacro:box_inertial_with_origin>

    </link>
    <link name="tail_link3">
        <visual>
            <!--tail3/Body003.-->
            <origin xyz="0.0 0.0 0.0" rpy="0.0 -0.0 0.0"/>
            <geometry>
                <mesh filename="file://$(find scorpion)/worlds_and_models/scorpion/meshes/Unnamed_tail3_body.dae"/>
            </geometry>
            <material name="silver" />

        </visual>
        <xacro:box_inertial_with_origin x="0.1" y="0.025" z="0.054" mass="0.4">
            <origin xyz="-0.05 0 0" />
        </xacro:box_inertial_with_origin>
        <collision>
            <origin xyz="-0.05 0 0" rpy="1.57 0 0" />
            <geometry>
                <box size="0.1 0.025 0.054" />
            </geometry>
        </collision>
    </link>

    <xacro:macro name="wheel" params="side num">

        <link name="${side}_wheel_${num}">
            <visual>
                <!--wheel/Body004.-->
                <origin xyz="0.0 0.0 0.0" rpy="0.0 -0.0 0.0"/>
                <geometry>
                    <mesh filename="file://$(find scorpion)/worlds_and_models/scorpion/meshes/Unnamed_wheel_body.dae"/>
                </geometry>
                <material name="black" />

            </visual>
            <collision>
                <origin rpy="1.57 0 0" />
                <geometry>
                    <cylinder radius="0.02" length="0.02" />
                </geometry>
            </collision>
            <xacro:cylinder_inertial_with_origin radius="0.01" length="0.005" mass="0.0005">
                <origin rpy="1.57 0 0"/>
            </xacro:cylinder_inertial_with_origin>
        </link>

    </xacro:macro>

    <!-- Example of a tail-recursion loop in Xacro. This macro calls itself with 1 minus its given value. -->
    <xacro:macro name="make_side_wheels" params="side num">
        <xacro:if value="${num > 0}">
            <xacro:wheel side="${side}" num="${num}" />
            <xacro:make_side_wheels side="${side}" num="${num-1}" />
        </xacro:if>
    </xacro:macro>

    <xacro:make_side_wheels side="left" num="3" />
    <xacro:make_side_wheels side="right" num="3" />



    <joint name="joint_1" type="revolute">
        <parent link="chassis_link"/>
        <child link="tail_link1"/>
        <origin xyz="0.19 0.0 0.05" rpy="0.0 0.7853981633974484 0.0"/>
        <axis xyz="0 -1 0"/>
        <limit upper="3.14" lower="-3.141592653589793" velocity="10" effort="10.0"/>
    </joint>
    <joint name="joint_2" type="revolute">
        <parent link="tail_link1"/>
        <child link="tail_link2"/>
        <origin xyz="-0.065 0.0 -0.008" rpy="0.0 -0.0 0.0"/>
        <axis xyz="0 0 1"/>
        <limit lower="-1.5707963267948966" upper="1.5707963267948966" velocity="1" effort="10.0"/>
    </joint>
    <joint name="joint_3" type="revolute">
        <parent link="tail_link2"/>
        <child link="tail_link3"/>
        <origin xyz="-0.046 0.0 0.0" rpy="0.0 -0.0 0.0"/>
        <axis xyz="0 -1 0"/>
        <limit lower="-1.5707963267948966" upper="1.5707963267948966" velocity="1" effort="10.0"/>
    </joint>


    <xacro:macro name="make_wheel_joint" params="xyz side num">
        <joint name="${side}_wheel_joint_${num}" type="continuous">
            <parent link="chassis_link"/>
            <child link="${side}_wheel_${num}"/>
            <origin xyz="${xyz}" rpy="0 0 0"/>
            <axis xyz="0 -1 0"/>
            <limit lower="-10000.0" upper="10000.0" velocity="1" effort="10.0"/>
        </joint>
    </xacro:macro>

    <xacro:make_wheel_joint xyz="0.02 -0.033 0.015" side="left" num="1" />
    <xacro:make_wheel_joint xyz="0.09 -0.033 0.015" side="left" num="2" />
    <xacro:make_wheel_joint xyz="0.16 -0.033 0.015" side="left" num="3" />

    <xacro:make_wheel_joint xyz="0.02 0.033 0.015" side="right" num="1" />
    <xacro:make_wheel_joint xyz="0.09 0.033 0.015" side="right" num="2" />
    <xacro:make_wheel_joint xyz="0.16 0.033 0.015" side="right" num="3" />


    <xacro:macro name="ros2_control_wheel_joint" params="side num">
        <joint name="${side}_wheel_joint_${num}">
            <command_interface name="velocity">
                <param name="min">-0.2</param>
                <param name="max">0.2</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>
    </xacro:macro>

    <xacro:macro name="ros2_control_make_side_wheels" params="side num">
        <xacro:if value="${num > 0}">
            <xacro:ros2_control_wheel_joint side="${side}" num="${num}" />
            <xacro:ros2_control_make_side_wheels side="${side}" num="${num-1}" />
        </xacro:if>
    </xacro:macro>

    <xacro:macro name="ros2_control_tail_joint" params="num minj maxj">
        <joint name="joint_${num}">
            <command_interface name="position">
                <param name="min">${minj}</param>
                <param name="max">${maxj}</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>

    </xacro:macro>

    <ros2_control name="GazeboSystem" type="system">
        <hardware>
            <plugin>ign_ros2_control/IgnitionSystem</plugin>
        </hardware>
        <!-- Using Xacro to minimise boilerplate code -->
        <xacro:ros2_control_make_side_wheels side="left" num="3" />
        <xacro:ros2_control_make_side_wheels side="right" num="3" />

        <xacro:ros2_control_tail_joint num="1" minj="0" maxj="3.14" />
        <xacro:ros2_control_tail_joint num="2" minj="-1.57" maxj="1.57" />
        <xacro:ros2_control_tail_joint num="3" minj="-1.57" maxj="1.57" />

    </ros2_control>



    <gazebo>
        <plugin filename="ign_ros2_control-system" name="ign_ros2_control::IgnitionROS2ControlPlugin">
            <ros>
                <remapping>/diff_drive_base_controller/odometry:=odom</remapping>
                <remapping>/diff_drive_base_controller/tf_odometry:=tf</remapping>
                <remapping>/diff_drive_base_controller/cmd_vel_unstamped:=cmd_vel</remapping>
            </ros>
            <parameters>$(find scorpion)/config/diffdrive_control.yaml</parameters>
        </plugin>
        <!-- Remapping topics so that mapping system works! -->

    </gazebo>


</robot>
